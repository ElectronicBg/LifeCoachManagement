@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.NameIdentifier)?.Value;

        if (userId == null)
        {
            throw new ArgumentException("Invalid user.");
        }

        var user = await UserManager.FindByIdAsync(userId);

        <li class="nav-item">
            @if (User.IsInRole("Admin"))
            {
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Index">Здравейте, @user.Name!</a>
            }
            else
            {
                <p class="nav-link text-dark">Здравейте, @user.Name!</p>
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Излез</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item border-end">
            <a class="nav-link" style="color:rgb(38, 67, 67)" asp-area="Identity" asp-page="/Account/Register">Регистрирай се</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" style="color:rgb(38, 67, 67)" asp-area="Identity" asp-page="/Account/Login">Влез</a>
        </li>
    }
</ul>

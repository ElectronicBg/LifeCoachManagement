@using LifeCoachManagement.Data
@using LifeCoachManagement.Helpers
@model IEnumerable<LifeCoachManagement.Models.Assignment>
@{
    ViewData["Title"] = "Assignments List";
}
<div style="background-image:url('/Images/LifeCoachManagementBackground2.jpg'); background-size: cover; background-position:center;min-height:90vh;">
    <div class="container">
        <div class="row justify-content-center align-items-center">
            <div class="col-md-12">
                <div class="d-flex justify-content-between align-items-center ">
                    <h1 style="color:rgb(160, 208, 204);">Списъск на Задачите</h1>
                    <div>
                        <a asp-action="Create" class="btn btn-success border-0" style="background-color:rgb(188, 208, 160);">Добави Задача</a>
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="text" class="form-control border-0 text-white" id="searchInput" placeholder="Търси по име или описание" style="background-color: rgba(0, 0, 0, 0.5);">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <select class="form-control border-0 text-white" id="categoryFilter" style="background-color: rgba(0, 0, 0, 0.5);">
                                <option value="">Всички Категории</option>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <option value="@category.Name">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <select class="form-control border-0 text-white" id="statusFilter" style="background-color: rgba(0, 0, 0, 0.5);">
                                <option value="">Всички Статуси</option>
                                @foreach (var status in ViewBag.Statuses)
                                {
                                    <option value="@status">@EnumHelper.GetDisplayName(status)</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="row" id="assignmentsList">
                    @foreach (var assignment in Model)
                    {
                        <div class="col-md-4 assignment text-white" data-category="@assignment.Category.Name" data-status="@assignment.Status">
                            <div class="card mb-4 rounded" style="background-color: rgba(0, 0, 0, 0.5);">
                                <div class="card-body">
                                    <h5 class="card-title name fw-bold">@assignment.Name</h5>
                                    <p class="card-text"><strong>Категория:</strong> @assignment.Category.Name</p>
                                    <p class="card-text"><strong>Статус:</strong> @EnumHelper.GetDisplayName(assignment.Status)</p>
                                    <p class="card-text card-description"><strong>Описание:</strong> @assignment.Description</p>
                                    <p class="card-text"><strong>Желан Резултат:</strong> @assignment.DesiredResults</p>
                                    <p class="card-text"><strong>Дата на предаване:</strong> @assignment.SubmissionDate.ToShortDateString()</p>
                                    <p class="card-text"><strong>Краен Срок:</strong> @assignment.Deadline.ToShortDateString()</p>
                                    <p class="card-text"><strong>Бюджет:</strong> @assignment.Budget лв.</p>
                                    <p class="card-text"><strong>Назначен Треньор:</strong> @(assignment.AssignedUser != null ? assignment.AssignedUser.Name : "To be assigned")</p>

                                    <div class="d-flex mb-2">
                                        <form method="post" asp-action="ChangeStatus" asp-route-id="@assignment.Id">
                                            @if (assignment.Status == Status.ForReview && User.IsInRole(Roles.Client.ToString()))
                                            {
                                                <button type="submit" name="newStatus" value="Completed" class="btn btn-success">Отбележи като Изпълнена</button>
                                            }
                                            @if (assignment.Status == Status.Pending && User.IsInRole(Roles.Client.ToString()))
                                            {
                                                <a asp-action="Edit" asp-route-id="@assignment.Id" class="btn btn-primary" style="background-color:rgb(160, 208, 204);">Редактирай</a>
                                                <button type="submit" name="newStatus" value="Cancelled" class="btn btn-warning border-0 text-white" style="background-color:rgb(208, 204, 160);">Откажи</button>
                                            }
                                        </form>

                                        @if (assignment.Status == Status.AssignedToCoach && User.IsInRole(Roles.Coach.ToString()))
                                        {
                                            <a asp-action="CoachEdit" asp-route-id="@assignment.Id" class="btn btn-primary border-0" style="background-color:rgb(160, 208, 180);">Промени Статуса</a>
                                        }
                                        @if (User.IsInRole(Roles.Admin.ToString()))
                                        {
                                            <a asp-action="Edit" asp-route-id="@assignment.Id" class="btn btn-primary me-3 border-0" style="background-color:rgb(160, 208, 204);">Редактирай</a>
                                            <form asp-action="Delete" asp-route-id="@assignment.Id" method="post"  onsubmit="return confirm('Сигурни ли сте, че искате да изтриете тази задача?');">
                                                <button type="submit" class="btn btn-danger border-0" style="background-color:rgb(208, 160, 164);">Изтрий</button>
                                            </form>
                                        }
                                    </div>
                                    <a href="@Url.Action("Index", "Photo", new { assignmentId = assignment.Id })" class="btn btn-primary border-0" style="background-color:rgb(180, 160, 208);">Виж Снимките</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function filterAssignments() {
            // Get the category and status from the input fields
            var category = document.getElementById("categoryFilter").value.toLowerCase();
            var status = document.getElementById("statusFilter").value.toLowerCase();

            console.log(category.name);
            console.log(status);
            // Get all the assignment elements
            var assignments = document.querySelectorAll(".assignment");

            // Loop through each assignment element and check if it matches the filters
            assignments.forEach(function (assignment) {
                var categoryValue = assignment.getAttribute("data-category").toLowerCase();
                var statusValue = assignment.getAttribute("data-status").toLowerCase();

                // Check if the assignment matches the filters
                var categoryMatches = category === "" || categoryValue === category;
                var statusMatches = status === "" || statusValue === status;

                // If at least one filter matches, display the assignment; otherwise, hide it
                if (categoryMatches && statusMatches) {
                    assignment.style.display = "";
                } else {
                    assignment.style.display = "none";
                }
            });
        }

        function searchAssignments() {
            // Get the search query from the input field
            var query = document.getElementById("searchInput").value.trim().toLowerCase();

            // Get all the assignment elements
            var assignments = document.querySelectorAll(".assignment");

            // Loop through each assignment element and check if the name or description matches the search query
            assignments.forEach(function (assignment) {
                var nameElement = assignment.querySelector('.name');
                var descriptionElement = assignment.querySelector('.card-description');

                var name = nameElement.innerText.trim().toLowerCase();
                var description = descriptionElement.innerText.trim().toLowerCase();

                // If the assignment's name or description contains the search query, display it; otherwise, hide it
                if (name.includes(query) || description.includes(query)) {
                    assignment.style.display = "";
                } else {
                    assignment.style.display = "none";
                }
            });
        }

        // Add event listeners to the search input field, category filter, and status filter
        var searchInput = document.getElementById("searchInput");
        searchInput.addEventListener("keyup", function () {
            // Call the searchAssignments function
            searchAssignments();
        });

        var categoryFilter = document.getElementById("categoryFilter");
        categoryFilter.addEventListener("change", function () {
            // Call the filterAssignments function
            filterAssignments();
        });

        var statusFilter = document.getElementById("statusFilter");
        statusFilter.addEventListener("change", function () {
            // Call the filterAssignments function
            filterAssignments();
        });

        // Initialize the filters on page load
        filterAssignments();
        searchAssignments();
    </script>
}

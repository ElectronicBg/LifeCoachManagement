@using LifeCoachManagement.Data
@model LifeCoachManagement.ViewModels.EditAssignmentViewModel
@{
    ViewData["Title"] = "Edit Assignment";
}

<h2>Edit Assignment</h2>
<form method="post" asp-action="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="@Model.Assignment.Id" />

    <div class="form-group">
        <label asp-for="@Model.Assignment.Name" class="form-label"></label>
        <input asp-for="@Model.Assignment.Name" class="form-control" />
        <span asp-validation-for="@Model.Assignment.Name" class="text-danger"></span>
    </div>

    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div class="form-group">
            <label asp-for="@Model.Assignment.AssignedUserId" class="form-label">Assigned User</label>
            <select asp-for="@Model.Assignment.AssignedUserId" asp-items="@Model.AssignedUsers" id="assignedUserDropdown" class="form-control">
                <option value="">No Assigned User</option>
            </select>
            <span asp-validation-for="@Model.Assignment.AssignedUserId" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="@Model.Assignment.Status" class="form-label"></label>
            <select asp-for="@Model.Assignment.Status" id="statusDropdown" class="form-control">
                @foreach (var status in Enum.GetValues(typeof(LifeCoachManagement.Models.Status)))
                {
                    <option value="@status">@status</option>
                }
            </select>
            <span asp-validation-for="@Model.Assignment.Status" class="text-danger"></span>
        </div>
    }
    <div class="form-group">
        <label asp-for="@Model.Assignment.CategoryId" class="form-label"></label>
        <select asp-for="@Model.Assignment.CategoryId" asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name"))" class="form-control">
            <option value="">Select a category</option>
        </select>
        <span asp-validation-for="@Model.Assignment.CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.Assignment.Description" class="form-label"></label>
        <textarea asp-for="@Model.Assignment.Description" class="form-control"></textarea>
        <span asp-validation-for="@Model.Assignment.Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.Assignment.DesiredResults" class="form-label"></label>
        <textarea asp-for="@Model.Assignment.DesiredResults" class="form-control"></textarea>
        <span asp-validation-for="@Model.Assignment.DesiredResults" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.Assignment.Deadline" class="form-label"></label>
        <input asp-for="@Model.Assignment.Deadline" type="datetime-local" class="form-control" />
        <span asp-validation-for="@Model.Assignment.Deadline" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.Assignment.Budget" class="form-label"></label>
        <input asp-for="@Model.Assignment.Budget" class="form-control" />
        <span asp-validation-for="@Model.Assignment.Budget" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Update Assignment</button>
</form>
<a asp-action="Index" class="btn btn-secondary">Back to Assignments List</a>

@section Scripts {
    <script>
        $(document).ready(function () {
            var previousStatus; // Declare previousStatus in the outer scope to make it accessible to both event handlers

            $('#statusDropdown').change(function () {
                // Capture the current status dropdown value
                previousStatus = $(this).val();
            });

            $('#assignedUserDropdown').change(function () {
                var statusDropdown = $('#statusDropdown');

                if ($(this).val() !== "") {
                    // If a user is selected, change the status to AssignedToCoach
                    statusDropdown.val("@(LifeCoachManagement.Models.Status.AssignedToCoach)");
                } else {
                    // If no user is selected, reset the status dropdown to its previous value
                    statusDropdown.val(previousStatus);
                }
            });
        });
    </script>

}